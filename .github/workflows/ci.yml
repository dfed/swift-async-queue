name: CI

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  pod-lint:
    name: Pod Lint
    runs-on: macos-13
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_15.0.1.app/Contents/Developer
      - name: Lint Podspec
        run: bundle exec pod lib lint --verbose --fail-fast --swift-version=5.6
  spm-13:
    name: Build Xcode 13
    runs-on: macOS-12
    strategy:
      matrix:
        platforms: [
          'iOS_15,watchOS_8',
          'macOS_12,tvOS_15',
        ]
      fail-fast: false
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.6'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_13.4.1.app/Contents/Developer
      - name: Build and Test Framework
        run: Scripts/build.swift ${{ matrix.platforms }}
      - name: Prepare Coverage Reports
        run: ./Scripts/prepare-coverage-reports.sh
      - name: Upload Coverage Reports
        if: success()
        uses: codecov/codecov-action@v3
  spm-13-swift:
    name: Swift Build Xcode 13
    runs-on: macOS-12
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.6'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_13.4.1.app/Contents/Developer
      - name: Build and Test Framework
        run: xcrun swift test -c release -Xswiftc -enable-testing
  spm-14:
    name: Build Xcode 14
    runs-on: macOS-12
    strategy:
      matrix:
        platforms: [
          'iOS_16,watchOS_9',
          'macOS_12,tvOS_16',
        ]
      fail-fast: false
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.6'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_14.0.1.app/Contents/Developer
      - name: Build and Test Framework
        run: Scripts/build.swift ${{ matrix.platforms }}
      - name: Prepare Coverage Reports
        run: ./Scripts/prepare-coverage-reports.sh
      - name: Upload Coverage Reports
        if: success()
        uses: codecov/codecov-action@v3
  spm-14-swift:
    name: Swift Build Xcode 14
    runs-on: macOS-12
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.6'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_14.0.1.app/Contents/Developer
      - name: Build and Test Framework
        run: xcrun swift test -c release -Xswiftc -enable-testing
  spm-15:
    name: Build Xcode 15
    runs-on: macos-13
    strategy:
      matrix:
        platforms: [
          'iOS_17,watchOS_10',
          'macOS_14,tvOS_17',
          'macCatalyst_14'
        ]
      fail-fast: false
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.6'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_15.0.1.app/Contents/Developer
      - name: Build and Test Framework
        run: Scripts/build.swift ${{ matrix.platforms }}
      - name: Prepare Coverage Reports
        run: ./Scripts/prepare-coverage-reports.sh
      - name: Upload Coverage Reports
        if: success()
        uses: codecov/codecov-action@v3
  spm-15-swift:
    name: Swift Build Xcode 15
    runs-on: macos-13
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.6'
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Bundle Install
        run: bundle install
      - name: Select Xcode Version
        run: sudo xcode-select --switch /Applications/Xcode_15.0.1.app/Contents/Developer
      - name: Build and Test Framework
        run: xcrun swift test -c release -Xswiftc -enable-testing
  linux:
    name: "Build and Test on Linux"
    runs-on: ubuntu-latest
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.6'
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Swift Environment
        uses: swift-actions/setup-swift@v1
        with:
          swift-version: 5.9
      - name: Build and Test Framework
        run: swift test -c release --enable-code-coverage -Xswiftc -enable-testing
      - name: Prepare Coverage Reports
        run: |
          llvm-cov export -format="lcov" .build/x86_64-unknown-linux-gnu/release/swift-async-queuePackageTests.xctest -instr-profile .build/x86_64-unknown-linux-gnu/release/codecov/default.profdata > coverage.lcov
      - name: Upload Coverage Reports
        if: success()
        uses: codecov/codecov-action@v3
